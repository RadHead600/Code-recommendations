using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

[RequireComponent(typeof(Rigidbody2D))]

public class Enemy : MonoBehaviour
{
    [SerializeField] private float _speed;
    [SerializeField] private Transform _spriteTrans;
    [SerializeField] private Transform _groundCheck;

    [SerializeField] private List<Transform> patrolPoints = new List<Transform>();

    private Rigidbody2D _rb;
    private bool _isGoRight = true;
    private int _index = 0;

    private void Start()
    {
        _rb = GetComponent<Rigidbody2D>();
    }

    private void Update()
    {
        Vector3 currentPatrolPoint = patrolPoints[_index].position;
        _isGoRight = currentPatrolPoint.x > transform.position.x;

        float position = 0.5f; 

        if (Mathf.Abs(currentPatrolPoint.x - transform.position.x) < position)
            _index++;

        if (_index >= patrolPoints.Count)
            _index = 0;
    }

    private void FixedUpdate()
    {
        Flip(_isGoRight);

        if (CheckGround())
        {
            if (_isGoRight)
                _rb.velocity = new Vector2
                (_speed, _rb.velocity.y);
            else
                _rb.velocity = new Vector2
                (-1 * _speed, _rb.velocity.y);
        }
    }

    private void Flip(bool isGoRight)
    {
        float isPlayerGoRight = isGoRight ? (-1f) : (1f);
        _spriteTrans.localScale = new Vector3(isPlayerGoRight, 1f, 1f);
    }

    private bool CheckGround()
    {
        float stance = 0.2f;

        int length = 1;

        Collider2D[] colliders = Physics2D.OverlapCircleAll(_groundCheck.position, stance);

        if (colliders.Length > length)
            return true;
        else
            return false;
    }
}
