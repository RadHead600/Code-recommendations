using System.Collections;
using UnityEngine;
using UnityEngine.UI;

public class PlayerController : MonoBehaviour
{
    [SerializeField] private float _speed;   
    [SerializeField] private float _jumpheight;
    [SerializeField] private Transform _groundCheck;
    [SerializeField] private Transform _spriteTrans;
    [SerializeField] private Text _coinText;

    private int _coins = 0;   
    
    private const string coinTag = "Coin";
    private const string playerAnimIsRun = "isRun";
    private const string playerAnimIsJump = "isJump";
    private const string HORIZONTAL = "Horizontal";

    private Rigidbody2D _rb;
    private Animator _anim;
    
    private void Start()
    {
        _rb = GetComponent<Rigidbody2D>();
        _anim = GetComponent<Animator>();             
    }

    private void Update()
    {
        float x = Input.GetAxis(HORIZONTAL);

        int lowestPossibleValue = 0;

        if (x != lowestPossibleValue) _anim.SetBool(playerAnimIsRun, true);
        else _anim.SetBool(playerAnimIsRun, false);

        Flip(x);
            
        _rb.velocity = new Vector2(x * _speed * Time.deltaTime, _rb.velocity.y);

        if (Input.GetKeyDown(KeyCode.Space) && CheckGround())
        {
            _rb.AddForce(transform.up * _jumpheight, ForceMode2D.Impulse);
            _anim.SetTrigger(playerAnimIsJump);
        }      
    }
    private void Flip(float x)
    {
        int lowestPossibleValue = 0;

        float isPlayerGoRight = x > lowestPossibleValue ? (-1f) : (1f);
        _spriteTrans.localScale = new Vector3(isPlayerGoRight, 1f, 1f);
    }
    private bool CheckGround()  
    {
        float groundCheckPosition = 0,2f;

        int collidersLength = 1;

        Collider2D[] colliders = Physics2D.OverlapCircleAll(_groundCheck.position, groundCheckPosition);

        if(colliders.Length > collidersLength) return true;
        else return false;    
    }

    private void OnTriggerEnter2D(Collider2D collision)
    {
        if (collision.gameObject.tag == coinTag)
        {
            _coins++;
            _coinText.text = _coins.ToString();
            collision.gameObject.SetActive(false);
        }   
    }    
}
